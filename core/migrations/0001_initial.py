# Generated by Django 3.2.16 on 2022-11-22 06:21

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('utility', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('isExhibitor', models.BooleanField(default=False, verbose_name='Exhibitor status')),
                ('t_n_d', models.BooleanField(default=False, verbose_name='Terms & Conditions')),
                ('participation_form', models.BooleanField(default=False)),
                ('isVisitor', models.BooleanField(default=False, verbose_name='Visitor status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyName', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('pinCode', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('briefProfile', models.TextField(blank=True, max_length=400, null=True)),
                ('product_and_services_offer', models.ManyToManyField(to='utility.VenderProductAndService')),
            ],
        ),
        migrations.CreateModel(
            name='VenderContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Key Person'), (2, 'Owner')])),
                ('fname', models.CharField(max_length=200)),
                ('lname', models.CharField(max_length=200)),
                ('mobile', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=200)),
                ('Vender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vender_contact', to='core.vender')),
                ('de', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='utility.department')),
            ],
        ),
        migrations.CreateModel(
            name='Exhibitor',
            fields=[
                ('user', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.user')),
                ('companyName', models.CharField(max_length=255)),
                ('address1', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, max_length=255, null=True)),
                ('company_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('billing_companyName', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_address1', models.TextField(blank=True, null=True)),
                ('billing_address2', models.TextField(blank=True, null=True)),
                ('billing_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_state', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_country', models.CharField(blank=True, max_length=255, null=True)),
                ('company_GST', models.CharField(blank=True, max_length=255, null=True)),
                ('company_PAN', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('senior_person_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('senior_person_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('senior_phone', models.CharField(blank=True, max_length=12, null=True)),
                ('senior_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('boothNumber', models.CharField(max_length=255)),
                ('boothSize', models.IntegerField()),
                ('boothType', models.CharField(choices=[('0', ''), ('1', 'BARE SPACE'), ('2', 'SHELL SCHEME')], default='0', max_length=255)),
                ('nature_of_bussiness', models.ManyToManyField(blank=True, to='utility.NatureOfBusiness')),
                ('our_brand', models.ManyToManyField(blank=True, to='utility.Brand')),
                ('product_catogory', models.ManyToManyField(blank=True, to='utility.ProductCatogory')),
                ('product_sub_catogory', models.ManyToManyField(blank=True, to='utility.ProductSubCatogory')),
            ],
        ),
    ]
